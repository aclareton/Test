
///////////////////////////////////////////////////////////////////////////////////////////////////
//
// MANAGE EXCEPTIONS
//
///////////////////////////////////////////////////////////////////////////////////////////////////

process.on('uncaughtException', function (err) {
  console.log("Server have received exception");
  console.error(err);
});

///////////////////////////////////////////////////////////////////////////////////////////////////
//
// LOCALS
//
///////////////////////////////////////////////////////////////////////////////////////////////////

var express = require('express.io');
var app     = express();
var port    = process.env.ENV_PORT ? process.env.ENV_PORT : 3000;

///////////////////////////////////////////////////////////////////////////////////////////////////
//
// APPLICATION CONFIGURATION
//
///////////////////////////////////////////////////////////////////////////////////////////////////

app.configure(function(){
	this.locals.basedir = __dirname + '/private/views';
	this.set('views', __dirname + '/private/views');
	this.set('view engine', 'jade');
	this.set('port', port);
	this.use(express.static(__dirname + '/public'));
	this.use(this.router);
});

///////////////////////////////////////////////////////////////////////////////////////////////////
//
// SOCKET IO CONFIGURATION
//
///////////////////////////////////////////////////////////////////////////////////////////////////

app.http().io();

app.io.configure(function(){
	this.enable('browser client minification');  // send minified client
	this.enable('browser client etag');          // apply etag caching logic based on version number
	this.enable('browser client gzip');          // gzip the file
	this.set('log', false);                      // disable logging
	this.set('log level', 0);                    // reduce logging
	this.set('transports', [                     // enable all transports (optional if you want flashsocket)
		'websocket',
		'flashsocket',
		'htmlfile',
		'xhr-polling',
		'jsonp-polling',
	]);
});

///////////////////////////////////////////////////////////////////////////////////////////////////
//
// SOCKETS IMPORTATION
//
///////////////////////////////////////////////////////////////////////////////////////////////////

require(__dirname + '/private/sockets')(app.io.sockets);

///////////////////////////////////////////////////////////////////////////////////////////////////
//
// ROUTES IMPORTATION
//
///////////////////////////////////////////////////////////////////////////////////////////////////

require(__dirname + '/private/routes')(app);

///////////////////////////////////////////////////////////////////////////////////////////////////
//
// APPLICATION START
//
///////////////////////////////////////////////////////////////////////////////////////////////////

app.listen(port);
